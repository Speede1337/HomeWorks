// У вас есть к ним доступ, но управление этим массивом происходит где-то ещё.
//  Добавляются новые сообщения и удаляются старые, и вы не знаете в какой момент это может произойти.
// Имея такую вводную информацию, решите, какую структуру данных вы могли бы использовать для ответа на вопрос «было ли сообщение прочитано?».
//  Структура должна быть подходящей, чтобы можно было однозначно сказать, было ли прочитано это сообщение для каждого объекта сообщения.
// P.S. Когда сообщение удаляется из массива messages, оно должно также исчезать из структуры данных.
// P.P.S. Нам не следует модифицировать сами объекты сообщений, добавлять туда свойства.
//  Если сообщения принадлежат какому-то другому коду, то это может привести к плохим последствиям.

// let messages = [
//   {text: "Hello", from: "John"},
//   {text: "Wazzup?", from: "John"},
//   {text: "See you soon", from: "Alice"},
// ];

// let checkedMessages = new WeakSet(messages);

// checkedMessages.add(messages[0]);
// checkedMessages.add(messages[1]);

// console.log(checkedMessages.has(messages[1]));

// messages.shift();


// Напишите деструктурирующее присваивание, которое:
//     свойство name присвоит в переменную name.
//     свойство years присвоит в переменную age.
//     свойство isAdmin присвоит в переменную isAdmin (false, если нет такого свойства)
    
// const user = {
//   name: "John",
//   years: 30
// };

// const {name, years: age, isAdmin = false} = user;

// console.log(name);
// console.log(age);
// console.log(isAdmin);
